{"mappings":"YAyGO,IAADA,EAAY,8BAIlBC,QAAQC,IAAIC,KAAKC,MAAMJ,IAEvB,IACEC,QAAQC,IAAIC,KAAKC,MAAMJ,IACvBC,QAAQC,IAAIC,KAAKC,MAPC,kCAQlBH,QAAQC,IAAI,2B,CACZ,MAAOG,GACPJ,QAAQC,IAAIG,E,CAEdJ,QAAQC,IAAIC,KAAKC,MAXE,+B","sources":["src/mod-11-repeta.js"],"sourcesContent":["// =======================GET========================\n// const BASE_URL = 'http://localhost:8080/books';\n\n// fetch(`${BASE_URL}`)\n//   .then(r => r.json())\n//   .then(console.log);\n\n// function fetchBooks() {\n//   fetch(`${BASE_URL}`)\n//     .then(r => r.json())\n//     .then(console.log);\n// }\n\n// fetchBooks();\n\n// function fetchBook(bookId) {\n//   fetch(`${BASE_URL}} /${bookId}`)\n//     .then(r => r.json())\n//     .then(console.log);\n// }\n\n// fetchBook(5); //{id: 5, title: 'Два солнца', author: 'Леонид Кудрявцев', genres: Array(1), rating: 6.36}\n// fetchBook(10); // {}\n\n// =======================POST========================\n// const BASE_URL = 'http://localhost:8080';\n\n// addNewBook({\n//   title: 'HTML: для новачків',\n//   author: 'Наталья Федорова',\n//   genres: ['IT'],\n//   rating: 9.56,\n// }).then(renderBook);\n\n// addNewBook({\n//   title: 'CSS: для новачків',\n//   author: 'Наталья Федорова',\n//   genres: ['IT'],\n//   rating: 9.0,\n// }).then(renderBook);\n\n// function addNewBook(newBook) {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//       Accept: 'application/json',\n//     },\n//     body: JSON.stringify(newBook),\n//   };\n\n//   return fetch(`${BASE_URL}/books`, options).then(r => r.json());\n// }\n\n// function renderBook(book) {\n//   console.log(book);\n// }\n\n// =======================PUT/PATCH========================\n// const BASE_URL = 'http://localhost:8080';\n\n// function updateBook(update, bookId) {\n//   const options = {\n//     method: 'PATCH',\n//     headers: {\n//       'Content-Type': 'application/json',\n//       Accept: 'application/json',\n//     },\n//     body: JSON.stringify(update),\n//   };\n\n//   return fetch(`${BASE_URL}/books/${bookId}`, options).then(r => r.json());\n// }\n\n// updateBook({ title: 'Vue для новачків' }, 35).then(console.log);\n// updateBook({ rating: 7.38 }, 39).then(console.log);\n// updateBook({ rating: 8, genres: 'освіта, IT' }, 39).then(console.log);\n\n// =======================DELETE========================\n// const BASE_URL = 'http://localhost:8080';\n\n// function deleteBook(bookId) {\n//   const options = {\n//     method: 'DELETE',\n//   };\n\n//   return fetch(`${BASE_URL}/books/${bookId}`, options).then(r => r.json());\n// }\n\n// deleteBook(39)\n//   .then(console.log)\n//   .catch(error => console.log(error));\n\n// =======================Помилка ========================\n// fetch('')\n//   .then(response => {\n//     if (response.ok) {\n//       return response.json();\n//     }\n\n//     throw new Error(response.statusText);\n//   })\n//   .catch(error => console.log(error));\n\n// ================Приклад 1. try...catch========================\nconst validJSON = '{\"name\": \"Mango\", \"age\": 3}';\nconst invalidJSON = '{ щось таке повернув бекенд }';\nconst validJSON2 = '{\"name\": \"Pear\", \"age\": 10}';\n\nconsole.log(JSON.parse(validJSON)); //{name: 'Mango', age: 3}\n\ntry {\n  console.log(JSON.parse(validJSON)); //{name: 'Mango', age: 3}\n  console.log(JSON.parse(invalidJSON));\n  console.log('Цей код не буде виконано'); //{name: 'Mango', age: 3}\n} catch (error) {\n  console.log(error); // SyntaxError: Expected property name or '}' in JSON at position 2\n}\nconsole.log(JSON.parse(validJSON2)); //цей код буде виконано, навідь після помилки\n"],"names":["$85b2f3964fc2f242$var$validJSON","console","log","JSON","parse","error"],"version":3,"file":"index.657c564c.js.map"}